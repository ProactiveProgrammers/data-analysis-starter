# --> check the Python program
- dataanalysis/dataanalysis/main.py:
    - description: Ensure that main.py file exists in the dataanalysis/dataanalysis/ directory
      check: ConfirmFileExists
    - description: Complete all TODOs and remove the TODO markers in the main.py
      check: MatchFileFragment
      options:
        fragment: TODO
        count: 0
        exact: true
    - description: Call the 'transform_string_to_number_list' function in the main.py
      check: MatchFileFragment
      options:
        fragment: "transform.transform_string_to_number_list"
        count: 1
        exact: true
    - description: Call the 'compute_mean' function in the main.py
      check: MatchFileFragment
      options:
        fragment: "summarize.compute_mean"
        count: 1
        exact: true
    - description: Create a sufficient number of docstring (i.e., multiple-line) comments in the main.py
      check: CountMultipleLineComments
      options:
        language: "Python"
        count: 2
        exact: false
    - description: Create a sufficient number of single-line comments in the main.py
      check: CountSingleLineComments
      options:
        language: "Python"
        count: 4
        exact: false

# --> check the Python program
- dataanalysis/dataanalysis/summarize.py:
    - description: Ensure that summarize.py file exists in the dataanalysis/dataanalysis/ directory
      check: ConfirmFileExists
    - description: Complete all TODOs and remove the TODO markers in the summarize.py
      check: MatchFileFragment
      options:
        fragment: TODO
        count: 0
        exact: true
    - description: Include exactly four float return types as '-> float' in the summarize.py
      check: MatchFileFragment
      options:
        fragment: "-> float"
        count: 4
        exact: true
    - description: Include exactly six lists of floats as 'List[float]' in the summarize.py
      check: MatchFileFragment
      options:
        fragment: "List[float]"
        count: 6
        exact: true
    - description: Include one import statement to import List as 'from typing import List' in the summarize.py
      check: MatchFileFragment
      options:
        fragment: "from typing import List"
        count: 1
        exact: true
    - description: Create a sufficient number of docstring (i.e., multiple-line) comments in the summarize.py
      check: CountMultipleLineComments
      options:
        language: "Python"
        count: 2
        exact: false
    - description: Create a sufficient number of single-line comments in the summarize.py
      check: CountSingleLineComments
      options:
        language: "Python"
        count: 5
        exact: false

# --> check the Python program
- dataanalysis/dataanalysis/transform.py:
    - description: Ensure that transform.py file exists in the dataanalysis/dataanalysis/ directory
      check: ConfirmFileExists
    - description: Complete all TODOs and remove the TODO markers in the transform.py
      check: MatchFileFragment
      options:
        fragment: TODO
        count: 0
        exact: true
    - description: Create a sufficient number of docstring (i.e., multiple-line) comments in the transform.py
      check: CountMultipleLineComments
      options:
        language: "Python"
        count: 2
        exact: false

# --> check the Python program
- dataanalysis/tests/test_summarize.py:
    - description: Ensure that test_summarize.py file exists in the dataanalysis/tests/ directory
      check: ConfirmFileExists
    - description: Complete all TODOs and remove the TODO markers in the test_summarize.py
      check: MatchFileFragment
      options:
        fragment: TODO
        count: 0
        exact: true
    - description: Create a sufficient number of docstring (i.e., multiple-line) comments in the test_summarize.py
      check: CountMultipleLineComments
      options:
        language: "Python"
        count: 5
        exact: false

# --> check the Python program
- dataanalysis/tests/test_transform.py:
    - description: Ensure that test_transform.py file exists in the dataanalysis/tests/ directory
      check: ConfirmFileExists
    - description: Complete all TODOs and remove the TODO markers in the test_transform.py
      check: MatchFileFragment
      options:
        fragment: TODO
        count: 0
        exact: true
    - description: Create a sufficient number of docstring (i.e., multiple-line) comments in the test_transform.py
      check: CountMultipleLineComments
      options:
        language: "Python"
        count: 3
        exact: false

# --> check the technical writing for various characteristics
- writing/reflection.md:
    - description: Ensure that the reflection.md file exists in the writing/ directory
      check: ConfirmFileExists
    - description: Complete all TODOs, remove the TODO markers, and rewrite comments for reflection.md
      check: MatchFileFragment
      options:
        fragment: TODO
        count: 0
        exact: true
    - description: Delete the 'Add Your Name Here' prompt in the reflection file
      check: MatchFileFragment
      options:
        fragment: "Add Your Name Here"
        count: 0
        exact: true
    - description: Write a minimum number of meaningful words in the reflection
      check: CountFileWords
      options:
        count: 500
        exact: false
    - description: Confirm that the markdown file has the correct number of headers
      check: CountMarkdownTags
      options:
        tag: heading
        count: 14
        exact: false
    - description: Confirm that the markdown file has the correct number of code blocks
      check: CountMarkdownTags
      options:
        tag: code
        count: 5
        exact: false
    - description: Confirm that the markdown file has the correct number of fenced code blocks
      check: CountMarkdownTags
      options:
        tag: code_block
        count: 6
        exact: false
# --> check that the number of commits in the Git repository is beyond a threshold
- description: Have at least a specific minimum number of commits (5) in repository
  check: CountCommits
  options:
    count: 5
